{"version":3,"sources":["logo.svg","components/sections/HeaderBar.js","components/features/PeopleList.js","components/sections/PageSection.js","App.js","reportWebVitals.js","index.js"],"names":["HeaderBar","className","src","Logo","alt","PeopleList","formattedData","Object","entries","data","key","listObject","avatar","name","summary","description","push","useState","searchTerm","setSearchTerm","listings","filter","entry","toUpperCase","search","includes","map","listing","i","type","placeholder","value","onChange","e","target","PageSection","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ksoOAAe,G,YAAA,IAA0B,kCCS1BA,EANG,kBAChB,wBAAQC,UAAU,aAAlB,SACE,qBAAKC,IAAKC,EAAMC,IAAI,OAAOH,UAAU,Y,cCuD1BI,MAzDf,WAGE,IADA,IAAIC,EAAgB,GACpB,MAAoBC,OAAOC,QAAQC,GAAnC,eAA0C,CAAC,IAA/BC,EAA8B,uBACpCC,EAAa,CACfC,OAAQH,EAAKC,GAAKE,OAClBC,KAAMJ,EAAKC,GAAKG,KAChBC,QAASL,EAAKC,GAAKK,aAGrBT,EAAcU,KAAKL,GAVD,MAcgBM,mBAAS,IAdzB,mBAcbC,EAda,KAcDC,EAdC,KAyBdC,EARed,EAAce,QAAO,SAACC,GACzC,IAAMT,EAAOS,EAAMT,KAAKU,cAClBC,EAASN,EAAWK,cAE1B,OAAiC,IAA1BV,EAAKY,SAASD,MAIOE,KAAI,SAACC,EAASC,GAC1C,OACE,sBAAa3B,UAAU,aAAvB,UACE,qBAAKC,IAAKyB,EAAQf,OAAQR,IAAKuB,EAAQd,KAAMZ,UAAU,iBACvD,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,aAAd,SAA4B0B,EAAQd,OACpC,mBAAGZ,UAAU,oBAAb,SAAkC0B,EAAQb,eAJpCc,MAUd,OACE,sBAAK3B,UAAU,cAAf,UACE,+BACE,uBACEA,UAAU,aACV4B,KAAK,OACLhB,KAAK,SACLiB,YAAY,iBACZC,MAAOb,EACPc,SAAU,SAACC,GACTd,EAAcc,EAAEC,OAAOH,YAK5BX,MCtCQe,EAbK,kBAClB,uBAAMlC,UAAU,eAAhB,UACE,oBAAIA,UAAU,QAAd,+BACA,yBAASA,UAAU,QAAnB,4MAMA,cAAC,EAAD,QCCWmC,MATf,WACE,OACE,sBAAKnC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCGSoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.39189f60.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.dccda281.svg\";","import React from \"react\";\nimport Logo from \"../../logo.svg\";\n\nconst HeaderBar = () => (\n  <header className=\"header-bar\">\n    <img src={Logo} alt=\"Logo\" className=\"logo\" />\n  </header>\n);\n\nexport default HeaderBar;\n","import React, { useState } from \"react\";\nimport data from \"../../data/data.json\";\n\nfunction PeopleList() {\n  //create formatted data structure from json, set as baseline state object\n  let formattedData = [];\n  for (const [key] of Object.entries(data)) {\n    let listObject = {\n      avatar: data[key].avatar,\n      name: data[key].name,\n      summary: data[key].description,\n    };\n\n    formattedData.push(listObject);\n  }\n\n  // hook setup for search bar\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // data for display object, filters by search hook value\n  const filteredData = formattedData.filter((entry) => {\n    const name = entry.name.toUpperCase();\n    const search = searchTerm.toUpperCase();\n\n    return name.includes(search) === true;\n  });\n\n  // display object\n  const listings = filteredData.map((listing, i) => {\n    return (\n      <div key={i} className=\"entry-item\">\n        <img src={listing.avatar} alt={listing.name} className=\"entry-avatar\" />\n        <div className=\"entry-content\">\n          <h4 className=\"entry-name\">{listing.name}</h4>\n          <p className=\"entry-description\">{listing.summary}</p>\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"people-list\">\n      <form>\n        <input\n          className=\"filter-bar\"\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Type a name...\"\n          value={searchTerm}\n          onChange={(e) => {\n            setSearchTerm(e.target.value);\n          }}\n        />\n      </form>\n\n      {listings}\n    </div>\n  );\n}\n\nexport default PeopleList;\n","import React from \"react\";\n\nimport PeopleList from \"../features/PeopleList\";\n\nconst PageSection = () => (\n  <main className=\"page-section\">\n    <h1 className=\"title\">The Person Finder</h1>\n    <summary className=\"intro\">\n      If you just can’t find someone and need to know what they look like,\n      you’ve come to the right place! Just type the name of the person you are\n      looking for below into the search box!\n    </summary>\n\n    <PeopleList />\n  </main>\n);\n\nexport default PageSection;\n","import './App.css';\n\nimport HeaderBar from './components/sections/HeaderBar';\nimport PageSection from './components/sections/PageSection';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HeaderBar />\n      <PageSection />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}